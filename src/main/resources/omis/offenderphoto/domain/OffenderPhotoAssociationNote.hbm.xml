<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
       "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
       "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.offenderphoto.domain">
	<class entity-name="omis.offenderphoto.domain.OffenderPhotoAssociationNote"
		proxy="omis.offenderphoto.domain.OffenderPhotoAssociationNote"
		name="omis.offenderphoto.domain.impl.OffenderPhotoAssociationNoteImpl"
		table="`OFFENDER_PHOTO_ASSOC_NOTE`">
		<id name="id" column="`ID`" type="java.lang.Long">
			<generator class="sequence">
				<param name="sequence">`OFFENDER_PHOTO_ASSOC_NOTE_SEQ`</param>
			</generator>
		</id>
		<property name="value" column="`VALUE`" not-null="false" type="string"/>
		<property name="date" column="`DATE`" not-null="false" type="java.util.Date"/>
		<many-to-one name="association" column="`ASSOCIATION_ID`" cascade="none" not-null="true"
			entity-name="omis.offenderphoto.domain.OffenderPhotoAssociation" unique="false"/>
		<component name="creationSignature">
			<many-to-one name="userAccount" column="`CREATE_ACCOUNT_ID`" not-null="true"/>
			<property name="date" column="`CREATE_DATE`" not-null="true"/>
		</component>
		<component name="updateSignature">
			<many-to-one name="userAccount" column="`UPDATE_ACCOUNT_ID`" not-null="true"/>
			<property name="date" column="`UPDATE_DATE`" not-null="true"/>
		</component>
	</class>
	<query name="findOffenderPhotoAssociationNotesByAssociation"><![CDATA[
		select note
		from omis.offenderphoto.domain.OffenderPhotoAssociationNote note
		where note.association = :association
	]]></query>
	<query name="findOffenderPhotoAssociationNote"><![CDATA[
		select note
		from omis.offenderphoto.domain.OffenderPhotoAssociationNote note
		where note.value = :value
		and note.date = :date
		and note.association = :association
	]]></query>
	<query name="findOffenderPhotoAssociaitonNoteExcluding"><![CDATA[
		select note
		from omis.offenderphoto.domain.OffenderPhotoAssociationNote note
		where note.value = :value
		and note.date = :date
		and note.association = :association
		and note <> :note
	]]></query>
	
	<!-- Delete all placement term notes by placement term -->
	<query name="deleteOffenderPhotoAssociationNotesByAssociation"><![CDATA[
		delete from omis.offenderphoto.domain.OffenderPhotoAssociationNote note
		where note.association = :association
	]]></query>
</hibernate-mapping>