<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.questionnaire.domain">
	<class entity-name="omis.questionnaire.domain.AnswerValue"
			proxy="omis.questionnaire.domain.AnswerValue"
			name="omis.questionnaire.domain.impl.AnswerValueImpl"
			table="`ALLOWED_ANSWER_VALUE`">
			<id name="id" column="`ID`" type="java.lang.Long">
				<generator class="sequence">
					<param name="sequence">`ALLOWED_ANSWER_VALUE_SEQ`</param>
				</generator>
			</id>
			<property name="description" column="`DESCRIPTION`" type="java.lang.String" not-null="true"/>
			<property name="value" column="`VALUE`" type="java.lang.String" not-null="true"/>
			<component name="creationSignature">
				<many-to-one name="userAccount" column="`CREATE_ACCOUNT_ID`" not-null="true"/>
				<property name="date" column="`CREATE_DATE`" not-null="true"/> 	
			</component>
			<component name="updateSignature">
				<many-to-one name="userAccount" column="`UPDATE_ACCOUNT_ID`" not-null="true"/>
				<property name="date" column="`UPDATE_DATE`" not-null="true"/>
			</component>
			
	</class>
	<query name="findAnswerValue"><![CDATA[
		select answerValue
		from
			omis.questionnaire.domain.AnswerValue answerValue
		where
			answerValue.description = :description
	]]></query>
	<query name="findAnswerValueExcluding"><![CDATA[
		select answerValue
		from
			omis.questionnaire.domain.AnswerValue answerValue
		where
			answerValue.description = :description
		and
			answerValue != answerValue
	]]></query>
	<query name="findAnswerValuesByDescription"><![CDATA[
		select answerValue
		from
			omis.questionnaire.domain.AnswerValue answerValue
		where
			upper(answerValue.description) like upper('%' || :description || '%')
	]]></query>
</hibernate-mapping>