<?xml version="1.0" encoding="UTF-8"?>
<!--
 - OMIS - Offender Management Information System
 - Copyright (C) 2011 - 2017 State of Montana
 -
 - This program is free software: you can redistribute it and/or modify
 - it under the terms of the GNU General Public License as published by
 - the Free Software Foundation, either version 3 of the License, or
 - (at your option) any later version.
 -
 - This program is distributed in the hope that it will be useful,
 - but WITHOUT ANY WARRANTY; without even the implied warranty of
 - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 - GNU General Public License for more details.
 -
 - You should have received a copy of the GNU General Public License
 - along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->
<!DOCTYPE hibernate-mapping PUBLIC
       "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
       "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.paroleeligibility.domain">
	<class entity-name="omis.paroleeligibility.domain.ParoleEligibility"
		proxy="omis.paroleeligibility.domain.ParoleEligibility"
		name="omis.paroleeligibility.domain.impl.ParoleEligibilityImpl"
		table="`PAROLE_ELIGIBILITY`">
		<id name="id" column="`ID`" type="java.lang.Long">
			<generator class="sequence">
				<param name="sequence">`PAROLE_ELIGIBILITY_SEQ`</param>
			</generator>
		</id>
		<property name="hearingEligibilityDate" column="`HEARING_ELIGIBILITY_DATE`" not-null="true" type="java.util.Date"/>
		<property name="reviewDate" column="`REVIEW_DATE`" not-null="false" type="java.util.Date"/>
		<many-to-one name="offender" column="`OFFENDER_ID`" entity-name="omis.offender.domain.Offender" not-null="true"/>
		<many-to-one name="appearanceCategory" column="`APPEARANCE_CATEGORY_ID`" entity-name="omis.paroleeligibility.domain.AppearanceCategory" not-null="false"/>
		
		<component name="status" class="omis.paroleeligibility.domain.component.ParoleEligibilityStatus">
			<property name="category" column="`STATUS_CATEGORY`" not-null="false">
				<type name="org.hibernate.type.EnumType">
					<param name="enumClass">omis.paroleeligibility.domain.EligibilityStatusCategory</param>
					<param name="useNamed">true</param>
					<param name="type">12</param>
				</type>
			</property>
			<property name="date" column="`STATUS_DATE`" not-null="false" type="java.util.Date"/>
			<property name="comment" column="`STATUS_COMMENT`" not-null="false" type="java.lang.String"/>
			<many-to-one name="reason" column="`STATUS_REASON_ID`" entity-name="omis.paroleeligibility.domain.EligibilityStatusReason" not-null="false"/>
		</component>
		<component name="creationSignature">
			<many-to-one name="userAccount" column="`CREATE_ACCOUNT_ID`" not-null="true"/>
			<property name="date" column="`CREATE_DATE`" not-null="true"/>
		</component>
		<component name="updateSignature">
			<many-to-one name="userAccount" column="`UPDATE_ACCOUNT_ID`" not-null="true"/>
			<property name="date" column="`UPDATE_DATE`" not-null="true"/>
		</component>
	</class>
	<query name="findParoleEligibility"><![CDATA[
		select eligibility
		from
			omis.paroleeligibility.domain.ParoleEligibility eligibility
		where
			eligibility.offender = :offender
		and
			eligibility.hearingEligibilityDate = :hearingEligibilityDate
	]]></query>
	<query name="findParoleEligibilityExcluding"><![CDATA[
		select eligibility
		from
			omis.paroleeligibility.domain.ParoleEligibility eligibility
		where
			eligibility.offender = :offender
		and
			eligibility.hearingEligibilityDate = :hearingEligibilityDate
		and
			eligibility <> :excludedEligibility
	]]></query>
	<query name="findParoleEligibilityCountByEligibilities"><![CDATA[
		select count(paroleEligibility.id)
		from
			omis.paroleeligibility.domain.ParoleEligibility paroleEligibility
		where
			paroleEligibility.offender = :offender
	]]></query>
	<query name="findParoleEligibilitiesByOffenderAfterDate"><![CDATA[
		select eligibility
		from
			omis.paroleeligibility.domain.ParoleEligibility eligibility
		where
			eligibility.offender = :offender
		and
			eligibility.hearingEligibilityDate > :date
	]]></query>
	<query name="findUnscheduledParoleEligibilities"><![CDATA[
		select eligibility
		from
			omis.paroleeligibility.domain.ParoleEligibility eligibility
		where
			(eligibility.status.category = 'APPEARING'
			and
			eligibility not in
				(select eligibility2
				from
					omis.boardhearing.domain.BoardHearing as boardHearing
				inner join
					boardHearing.paroleEligibility as eligibility2)
			)
		order by
			eligibility.hearingEligibilityDate asc
	]]></query>
	<query name="findUnscheduledParoleEligibilitiesIncluding"><![CDATA[
		select eligibility
		from
			omis.paroleeligibility.domain.ParoleEligibility eligibility
		where
			(eligibility.status.category = 'APPEARING'
			and
			eligibility not in
				(select eligibility2
				from
					omis.boardhearing.domain.BoardHearing as boardHearing
				inner join
					boardHearing.paroleEligibility as eligibility2)
			)
		order by
			eligibility.hearingEligibilityDate asc
	]]></query>
	<query name="findUnscheduledParoleEligibilitiesByLocation"><![CDATA[
		select eligibility
		from
			omis.paroleeligibility.domain.ParoleEligibility eligibility
		inner join
			eligibility.offender offender,
			omis.locationterm.domain.LocationTerm locationTerm
		inner join
			locationTerm.location location
		inner join
			locationTerm.offender locOffender
		where
			(eligibility.status.category = 'APPEARING'
			and
			eligibility not in
				(select eligibility2
				from
					omis.boardhearing.domain.BoardHearing as boardHearing
				inner join
					boardHearing.paroleEligibility as eligibility2)
			)
			and
				locOffender = offender
			and
				(locationTerm.startDate <= :date 
			and 
				(locationTerm.endDate > :date or locationTerm.endDate is null))
			and
				location = :location
		order by
			eligibility.hearingEligibilityDate asc
	]]></query>
</hibernate-mapping>