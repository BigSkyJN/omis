<?xml version="1.0" encoding="UTF-8"?>
<!--
 - Author: Stephen Abson
 -->
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.stg.domain">
	<class	entity-name="omis.stg.domain.SecurityThreatGroup"
			proxy="omis.stg.domain.SecurityThreatGroup"
			name="omis.stg.domain.impl.SecurityThreatGroupImpl"
			table="`STG`">
		<id name="id" type="java.lang.Long" column="`ID`">
			<generator class="sequence">
				<param name="sequence">`STG_SEQ`</param>
			</generator>
		</id>
		<property name="name" type="string" not-null="true" unique="true" column="`NAME`"/>
		<property name="valid" type="yes_no" not-null="true" column="`VALID`"/>
		<many-to-one name="state" entity-name="omis.region.domain.State" not-null="false"
		             column="`STATE_ID`"/>
	</class>
	<query name="findSecurityThreatGroups"><![CDATA[
		select securityThreatGroup
		from omis.stg.domain.SecurityThreatGroup securityThreatGroup
		  left outer join securityThreatGroup.state state
		order by securityThreatGroup.name, state.name
	]]></query>
	<query name="findSecurityThreatGroup"><![CDATA[
		from
			omis.stg.domain.SecurityThreatGroup securityThreatGroup
		where
			securityThreatGroup.name = :name
		and
			securityThreatGroup.state = :state
	]]></query>
	<query name="findSecurityThreatGroupExcluding"><![CDATA[
		from
			omis.stg.domain.SecurityThreatGroup securityThreatGroup
		where
			securityThreatGroup.name = :name
		and
			securityThreatGroup.state = :state
		and
			securityThreatGroup <> :excludedSecurityThreatGroup
	]]></query>
</hibernate-mapping>