<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.presentenceinvestigation.domain">
	<typedef name="healthRating" class="org.hibernate.type.EnumType">
		<param name="enumClass">omis.presentenceinvestigation.domain.HealthRating</param>
		<param name="useNamed">true</param>
		<param name="type">12</param>
	</typedef>
	<class entity-name="omis.presentenceinvestigation.domain.HealthSectionSummary"
			proxy="omis.presentenceinvestigation.domain.HealthSectionSummary"
			name="omis.presentenceinvestigation.domain.impl.HealthSectionSummaryImpl"
			table="`HEALTH_SECTION_SUMMARY`">
			<id name="id" column="`ID`" type="java.lang.Long">
				<generator class="sequence">
					<param name="sequence">`HEALTH_SECTION_SUMMARY_SEQ`</param>
				</generator>
			</id>
			<many-to-one name="presentenceInvestigationRequest" column="`PRESENTNCE_INVESTIGATN_RQST_ID`" entity-name="omis.presentenceinvestigation.domain.PresentenceInvestigationRequest" not-null="true" />
			<property name="rating" column="`HEALTH_RATING`" not-null="true" type="healthRating"/>
			<component name="creationSignature">
				<many-to-one name="userAccount" column="`CREATE_ACCOUNT_ID`" not-null="true"/>
				<property name="date" column="`CREATE_DATE`" not-null="true"/> 	
			</component>
			<component name="updateSignature">
				<many-to-one name="userAccount" column="`UPDATE_ACCOUNT_ID`" not-null="true"/>
				<property name="date" column="`UPDATE_DATE`" not-null="true"/>
			</component>
	</class>
	<query name="findHealthSectionSummary"><![CDATA[
		select summary
		from
			omis.presentenceinvestigation.domain.HealthSectionSummary summary
		where
			summary.presentenceInvestigationRequest = :presentenceInvestigationRequest
			and summary.rating = :rating
	]]></query>	
	<query name="findHealthSectionSummaryExcluding"><![CDATA[
		select summary
		from
			omis.presentenceinvestigation.domain.HealthSectionSummary summary
		where
			(summary.rating = :rating)
			and
			summary != :healthSectionSummary
	]]></query>	
	<query name="findHealthSectionsummaryByPresentenceInvestigationRequest"><![CDATA[
		select summary
		from
			omis.presentenceinvestigation.domain.HealthSectionSummary summary
		where
			summary.presentenceInvestigationRequest = :presentenceInvestigationRequest	
	]]></query>			
</hibernate-mapping>