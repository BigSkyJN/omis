<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
       "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
       "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.facility.domain">
	<class entity-name="omis.facility.domain.Room"
		proxy="omis.facility.domain.Room"
		name="omis.facility.domain.impl.RoomImpl"
		table="`FACILITY_ROOM`">
		<id name="id" column="`ID`" type="java.lang.Long">
			<generator class="sequence">
				<param name="sequence">`FACILITY_ROOM_SEQ`</param>
			</generator>
		</id>
		<property name="name" column="`NAME`" not-null="true" type="string"/>
		<many-to-one name="facility" column="`FACILITY_ID`" cascade="none" not-null="true"
		entity-name="omis.facility.domain.Facility" unique="false"/>
		<many-to-one name="complex" column="`COMPLEX_ID`" cascade="none" not-null="false"
		entity-name="omis.facility.domain.Complex" unique="false"/>
		<many-to-one name="unit" column="`UNIT_ID`" cascade="none" not-null="false"
		entity-name="omis.facility.domain.Unit" unique="false"/>
		<many-to-one name="level" column="`LEVEL_ID`" cascade="none" not-null="false"
		entity-name="omis.facility.domain.Level" unique="false"/>
		<many-to-one name="section" column="`SECTION_ID`" cascade="none" not-null="false"
		entity-name="omis.facility.domain.Section" unique="false"/>
	</class>
	<query name="findRoomsByFacility">
		from 
			omis.facility.domain.Room room
			inner join fetch room.facility facility
		where 
			facility = :facility
		order by
			room.name
	</query>
	<query name="findRoomsByLevel">
		from 
			omis.facility.domain.Room room
			inner join fetch room.level level
		where 
			level = :level
		order by
			room.name
	</query>
	<query name="findRoomsBySection">
		from 
			omis.facility.domain.Room room
			inner join fetch room.section section
		where 
			section = :section
		order by
			room.name
	</query>
	<query name="findRoomsByComplex">
		from 
			omis.facility.domain.Room room
			inner join fetch room.complex complex
		where 
			complex = :complex
		order by
			room.name
	</query>
	<query name="findRoomsByUnit">
		from 
			omis.facility.domain.Room room
			inner join fetch room.unit unit
		where 
			unit = :unit
		order by
			room.name
	</query>
	<query name="countRoomsBySection">
		select 
			count(*)
		from 
			omis.facility.domain.Room room
		where 
			room.section = :section
	</query>
	<query name="countBedsByRoom">
		select 
			count(*)
		from 
			omis.facility.domain.Bed bed
		where 
			bed.room = :room
	</query>
	<query name="findRooms"><![CDATA[
		select room
		from
			omis.facility.domain.Room room
			left outer join fetch room.complex complex
			left outer join fetch room.facility facility
			left outer join fetch room.unit unit
			left outer join fetch room.section section
			left outer join fetch room.level level
		where
			facility = :facility
		and
			(:complex is null or complex = :complex)
		and
			(:unit is null or unit = :unit)
		and
			(:section is null or section = :section)
		and
			(:level is null or level = :level)
		order by
			complex.name, unit.name, section.name, level.name, cast(room.name as integer), room.name asc
	]]></query>
	<query name="findRoom"><![CDATA[
		from
			omis.facility.domain.Room room
			left outer join fetch room.facility facility
		where
			facility = :facility
		and
			room.name = :name
	]]></query>
	<query name="findRoomExcluding"><![CDATA[
		from
			omis.facility.domain.Room room
			left outer join fetch room.facility facility
		where
			facility = :facility
		and
			room.name = :name
		and
			room <> :excludedRoom
	]]></query>
</hibernate-mapping>