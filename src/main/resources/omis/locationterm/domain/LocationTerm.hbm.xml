<?xml version="1.0" encoding="UTF-8"?>

<!--
 - OMIS - Offender Management Information System
 - Copyright (C) 2011 - 2017 State of Montana
 -
 - This program is free software: you can redistribute it and/or modify
 - it under the terms of the GNU General Public License as published by
 - the Free Software Foundation, either version 3 of the License, or
 - (at your option) any later version.
 -
 - This program is distributed in the hope that it will be useful,
 - but WITHOUT ANY WARRANTY; without even the implied warranty of
 - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 - GNU General Public License for more details.
 -
 - You should have received a copy of the GNU General Public License
 - along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->

<!--
  - Mapping and queries for location term.
  -
  - Author: Stephen Abson
  - Author: Joel Norris
  -->
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.locationterm.domain">
	<class entity-name="omis.locationterm.domain.LocationTerm"
	       proxy="omis.locationterm.domain.LocationTerm"
	       name="omis.locationterm.domain.impl.LocationTermImpl"
		   table="`LOCATION_TERM`">
	  <id name="id" column="`ID`" type="java.lang.Long">
        <generator class="sequence">
          <param name="sequence">`LOCATION_TERM_SEQ`</param>
        </generator>
	  </id>
      <component name="creationSignature" class="omis.audit.domain.CreationSignature">
      	<many-to-one name="userAccount" entity-name="omis.user.domain.UserAccount" not-null="true" column="`CREATE_ACCOUNT_ID`"/>
      	<property name="date" type="java.util.Date" not-null="true" column="`CREATE_DATE`"/>
      </component>
      <component name="updateSignature" class="omis.audit.domain.UpdateSignature">
      	<many-to-one name="userAccount" entity-name="omis.user.domain.UserAccount" not-null="true" column="`UPDATE_ACCOUNT_ID`"/>
      	<property name="date" type="java.util.Date" not-null="true" column="`UPDATE_DATE`"/>
      </component>
      <properties name="uniqueLocationTerm">
      	<component name="dateRange" class="omis.datatype.DateRange">
      		<property name="startDate" type="java.util.Date" not-null="true" column="`START_DATE`"/>
      		<property name="endDate" type="java.util.Date" not-null="false" column="`END_DATE`"/>
      	</component>
      	<many-to-one name="offender" entity-name="omis.offender.domain.Offender" not-null="true" column="`OFFENDER_ID`"/>
      </properties>
      <many-to-one name="location" lazy="false" fetch="join" entity-name="omis.location.domain.Location" not-null="true" column="`LOCATION_ID`"/>
      <property name="locked" type="yes_no" not-null="true" column="`LOCKED`"/>
      <property name="notes" type="java.lang.String" not-null="false" column="`NOTES`"/>
	</class>
	<query name="findLocationTermsByOffender"><![CDATA[
		select locationTerm
		from omis.locationterm.domain.LocationTerm as locationTerm
			inner join locationTerm.location as location
		where locationTerm.offender = :offender
		order by
			locationTerm.dateRange.startDate, locationTerm.dateRange.endDate,
			location.organization.name
	]]></query>
	<query name="findLocationTerm"><![CDATA[
		select locationTerm
		from omis.locationterm.domain.LocationTerm locationTerm
		where ((locationTerm.dateRange.startDate = :startDate or (locationTerm.dateRange.startDate is null and :startDate is null))
		  and (locationTerm.dateRange.endDate = :endDate or (locationTerm.dateRange.endDate is null and :endDate is null)))
		  and locationTerm.offender = :offender
	]]></query>
	<query name="findLocationTermExcluding"><![CDATA[
		select locationTerm
		from omis.locationterm.domain.LocationTerm locationTerm
		where ((locationTerm.dateRange.startDate = :startDate or (locationTerm.dateRange.startDate is null and :startDate is null))
		  and (locationTerm.dateRange.endDate = :endDate or (locationTerm.dateRange.endDate is null and :endDate is null)))
		  and locationTerm.offender = :offender
		  and locationTerm not in (:excludedLocationTerms)
	]]></query>
	<query name="findLocationTermByOffenderOnDate"><![CDATA[
		select
			locationTerm
		from
			omis.locationterm.domain.LocationTerm locationTerm
		where
			locationTerm.offender = :offender
		and
				(locationTerm.startDate <= :date 
			and 
				(locationTerm.endDate > :date or locationTerm.endDate is null))
	]]></query>
	<query name="findLocationTermForOffenderWithStartDate"><![CDATA[
		select locationTerm
		from omis.locationterm.domain.LocationTerm locationTerm
		where locationTerm.offender = :offender
		  and locationTerm.dateRange.startDate = :startDate
	]]></query>
	<query name="countLocationTermsForOffenderBetweenDates"><![CDATA[
		select count(locationTerm)
		from omis.locationterm.domain.LocationTerm locationTerm
		where locationTerm.offender = :offender
		  and (locationTerm.dateRange.startDate <= :endDate or :endDate is null)
		    and (locationTerm.dateRange.endDate > :startDate
		      or (locationTerm.dateRange.endDate is null or :startDate is null))
	]]></query>
	<query name="countLocationTermsForOffenderBetweenDatesExcluding"><![CDATA[
		select count(locationTerm)
		from omis.locationterm.domain.LocationTerm locationTerm
		where locationTerm.offender = :offender
		  and (locationTerm.dateRange.startDate <= :endDate or :endDate is null)
		    and (locationTerm.dateRange.endDate > :startDate
		      or (locationTerm.dateRange.endDate is null or :startDate is null))
		  and locationTerm not in (:excludedLocationTerms)
	]]></query>
	<query name="countLocationTermsForOffenderAfterDateExcluding"><![CDATA[
		select count(locationTerm)
		from omis.locationterm.domain.LocationTerm locationTerm
		where locationTerm.offender = :offender
		  and locationTerm.dateRange.startDate >= :startDate
		  and (locationTerm <> :excludedLocationTerm
		  	   or :excludedLocationTerm is null)
	]]></query>
	<query name="findLocationTermForSupervisoryOrganizationBetweenDates"><![CDATA[
		select locationTerm
		from omis.locationterm.domain.LocationTerm locationTerm
			inner join locationTerm.offender offender
			inner join offender.name offenderName
			inner join locationTerm.location location
			inner join location.organization organization
		where organization = :supervisoryOrganization
	  		and offender = :offender
	  		and ((locationTerm.dateRange.startDate < :endDate or :endDate is null)
	  		and (locationTerm.dateRange.endDate is null or locationTerm.dateRange.endDate > :startDate))
	  	order by locationTerm.dateRange.startDate desc
	]]></query>
	<query name="findLocationTermsByOffenderBetweenDates"><![CDATA[
		select locationTerm
		from omis.locationterm.domain.LocationTerm locationTerm
			inner join locationTerm.offender offender
			inner join offender.name offenderName
			inner join locationTerm.location location
		where  offender = :offender
	  		and ((locationTerm.dateRange.startDate < :endDate or :endDate is null)
	  		and (locationTerm.dateRange.endDate is null or locationTerm.dateRange.endDate > :startDate))
	  	order by locationTerm.dateRange.startDate desc	
	]]></query>
</hibernate-mapping>