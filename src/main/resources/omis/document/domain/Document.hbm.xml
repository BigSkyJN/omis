<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.document.domain">
	<class entity-name="omis.document.domain.Document"
		proxy="omis.document.domain.Document"
		name="omis.document.domain.impl.DocumentImpl"
		table="`DOCUMENT`">
		<id name="id" column="`ID`">
			<generator class="sequence">
				<param name="sequence">`DOCUMENT_SEQ`</param>
			</generator>
		</id>	
		<property name="title" type="java.lang.String" column="`TITLE`" 
			not-null="true"/>
		<property name="fileExtension" type="java.lang.String" 
			column="`FILE_EXTENSION`" not-null="true"/>
		<property name="date" type="java.util.Date" column="`DATE`" 
			not-null="true"/>
		<property name="filename" type="java.lang.String" column="`FILENAME`"
			not-null="true"/>
		<component name="creationSignature">
			<many-to-one name="userAccount" column="`CREATE_ACCOUNT_ID`" 
				not-null="true"/>
			<property name="date" column="`CREATE_DATE`" not-null="true"/>
		</component>
		<component name="updateSignature">
			<many-to-one name="userAccount" column="`UPDATE_ACCOUNT_ID`" 
				not-null="true"/>
			<property name="date" column="`UPDATE_DATE`" not-null="true"/>
		</component>
	</class>
	<sql-query name="findNextDocumentFilename"><![CDATA[
		select "DOCUMENT_FILENAME_SEQ".nextval from dual
	]]></sql-query>
	<query name="findDocumentsByFilename"><![CDATA[
		select document
		from
			omis.document.domain.Document document
		where
			document.filename = :filename
	]]></query>
	<query name="findDocumentsByFilenameExcluding"><![CDATA[
		select document
		from
			omis.document.domain.Document document
		where
			document.filename = :filename
		and
			document not in (:documents)
	]]></query>
	
	
</hibernate-mapping>