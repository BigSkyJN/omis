<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
       "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
       "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.judge.domain">
	<class entity-name="omis.judge.domain.JudgeTerm"
		proxy="omis.judge.domain.JudgeTerm"
		name="omis.judge.domain.impl.JudgeTermImpl"
		table="`JUDGE_TERM`">
		<id name="id" column="`ID`" type="java.lang.Long">
			<generator class="sequence">
				<param name="sequence">`JUDGE_TERM_SEQ`</param>
			</generator>
		</id>
		<many-to-one name="judge" column="`JUDGE_ID`" cascade="none" not-null="true"
			entity-name="omis.person.domain.Person" unique="false"/>
		<component name="dateRange">
			<property name="startDate" column="`START_DATE`" type="java.util.Date" not-null="false"/>
			<property name="endDate" column="`END_DATE`" not-null="false" type="java.util.Date"/>
		</component>
	</class>
	<query name="findJudgeTerm"><![CDATA[
		from
			omis.judge.domain.JudgeTerm as judgeTerm
		where
			judgeTerm.judge = :judge
		and
			(judgeTerm.dateRange.startDate = :startDate
			OR (:startDate is null and judgeTerm.dateRange.startDate is null))
		and
			(judgeTerm.dateRange.endDate = :endDate
			OR (:endDate is null and judgeTerm.dateRange.endDate is null))
	]]></query>
	<query name="findJudgeTermExcluding"><![CDATA[
		from
			omis.judge.domain.JudgeTerm as judgeTerm
		where
			judgeTerm.judge = :judge
		and
			(judgeTerm.dateRange.startDate = :startDate
			OR (:startDate is null and judgeTerm.dateRange.startDate is null))
		and
			(judgeTerm.dateRange.endDate = :endDate
			OR (:endDate is null and judgeTerm.dateRange.endDate is null))
		and
			judgeTerm <> :judgeTerm
	]]></query>
	<query name="findJudgesQueryOnDate"><![CDATA[
		select
			judge
		from
			omis.judge.domain.JudgeTerm as judgeTerm
			inner join judgeTerm.judge as judge
		where
			(judgeTerm.dateRange.startDate <= :effectiveDate
			OR judgeTerm.dateRange.startDate is null)
		and
			(judgeTerm.dateRange.endDate >= :effectiveDate
			OR judgeTerm.dateRange.endDate is null)
		and
			(upper(judge.name.lastName) like concat('%', :query, '%')
			 OR 
			 upper(judge.name.firstName) like concat('%', :query, '%'))
		order by judge.name.lastName, judge.name.firstName
	]]></query>
	<query name="findJudgesByNameOnDate"><![CDATA[
		select
			judge
		from
			omis.judge.domain.JudgeTerm as judgeTerm
			inner join judgeTerm.judge as judge
		where
			(judgeTerm.dateRange.startDate <= :effectiveDate
			OR judgeTerm.dateRange.startDate is null)
		and
			(judgeTerm.dateRange.endDate >= :effectiveDate
			OR judgeTerm.dateRange.endDate is null)
		and
			upper(judge.name.lastName) like concat('%', :lastName, '%')
		and
			upper(judge.name.firstName) like concat('%', :firstName, '%')
		order by judge.name.lastName, judge.name.firstName
	]]></query>
</hibernate-mapping>