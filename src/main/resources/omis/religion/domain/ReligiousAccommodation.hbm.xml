<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Author: Stephen Abson
  -->
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.religion.domain">
	<class entity-name="omis.religion.domain.ReligiousAccommodation"
	       proxy="omis.religion.domain.ReligiousAccommodation"
	       name="omis.religion.domain.impl.ReligiousAccommodationImpl"
	       table="`RELIGIOUS_ACCOMM`">
		<id name="id" column="`ID`">
			<generator class="sequence">
				<param name="sequence">`RELIGIOUS_ACCOMM_SEQ`</param>
			</generator>
		</id>
		<property name="name" type="java.lang.String" not-null="true" unique="true" column="`NAME`"/>
		<property name="valid" type="yes_no" not-null="true" column="`VALID`"/>
		<property name="sortOrder" type="java.lang.Short" not-null="true" column="`SORT_ORDER`"/>
	</class>
	<query name="findReligiousAccommodations"><![CDATA[
		select religiousAccommodation
		from omis.religion.domain.ReligiousAccommodation religiousAccommodation
		order by religiousAccommodation.sortOrder, religiousAccommodation.name
	]]></query>
	<query name="findReligiousAccommodation"><![CDATA[
		select religiousAccommodation
		from omis.religion.domain.ReligiousAccommodation religiousAccommodation
		where
			religiousAccommodation.name = :name
	]]></query>
	<query name="findReligiousAccommodationExcluding"><![CDATA[
		select religiousAccommodation
		from omis.religion.domain.ReligiousAccommodation religiousAccommodation
		where
			religiousAccommodation.name = :name
		and
			religiousAccommodation <> :excludedAccommodation
	]]></query>
</hibernate-mapping>