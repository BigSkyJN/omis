<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.caseload.report">
	<query name="findCaseWorkByCaseWorkerAndDates"><![CDATA[
		select new omis.caseload.report.CaseworkSummary(
		cwa.caseload.id, cwa.id, cwa.worker.name.firstName, 
		cwa.worker.name.lastName, cwa.worker.name.middleName,
		cwa.dateRange.startDate, cwa.dateRange.endDate, 
		cwa.caseload.name, cwa.caseload.category)
		from
			omis.caseload.domain.CaseWorkerAssignment cwa
		where
			cwa.worker = :worker	
			and cwa.caseload.name = :caseloadName
			and cwa.caseload.category = :caseWorkCategory
			and
			((cwa.dateRange.startDate <= :startDate)
				and
			(cwa.dateRange.startDate <= :endDate or :endDate is null))
		order by
			cwa.dateRange.endDate
	]]></query>
	<query name="findCaseWorkByCaseWorkerAndEffectiveDate"><![CDATA[
		select new omis.caseload.report.CaseworkSummary(
		cwa.caseload.id, cwa.id, cwa.worker.name.firstName, 
		cwa.worker.name.lastName, cwa.worker.name.middleName,
		cwa.dateRange.startDate, cwa.dateRange.endDate, 
		cwa.caseload.name, caseWorkerCaseload.category)
		from
			omis.caseload.domain.CaseWorkerAssignment cwa			
			inner join cwa.caseload caseWorkerCaseload
		where
			cwa.worker = :worker
			and
			((cwa.dateRange.startDate <= :effectiveDate)
  				and (cwa.dateRange.endDate is null or cwa.dateRange.endDate > :effectiveDate))  		
  			order by cwa.dateRange.endDate desc
	]]></query>
	<query name="findSupervisoryCaseWorkByCaseWorkerAndDate"><![CDATA[
	select new omis.caseload.report.CaseworkSummary(
			cwa.caseload.id, cwa.id, worker.name.firstName, 
			worker.name.lastName, worker.name.middleName,
			cwa.dateRange.startDate, cwa.dateRange.endDate, 
			cwa.caseload.name, cwa.caseload.category)
		from
			omis.caseload.domain.CaseWorkerAssignment cwa
			inner join cwa.worker worker
		where
			(worker = :worker)
			and
			((cwa.dateRange.startDate <= :effectiveDate)
  				and (cwa.dateRange.endDate is null or cwa.dateRange.endDate > :effectiveDate))  
  			order by cwa.dateRange.endDate desc
	]]></query>
	<query name="summarizeCaseWorkByCaseWorkerAssignment"><![CDATA[
		select new omis.caseload.report.CaseworkSummary(
			caseload.id, cwa.id, worker.name.firstName, 
			worker.name.lastName, worker.name.middleName,
			cwa.dateRange.startDate, cwa.dateRange.endDate, 
			caseload.name, caseload.category)
		from 
			omis.caseload.domain.CaseWorkerAssignment cwa
			inner join cwa.caseload caseload
			inner join cwa.worker worker
		where
			cwa = :caseWorkerAssignment
		order by 
			cwa.dateRange.endDate desc
	]]></query>	
	<query name="findCaseWorkerSummariesByCase"><![CDATA[
	select new omis.caseload.report.CaseworkSummary(
			caseWorkerCaseload.id, cwa.id, worker.name.firstName, 
			worker.name.lastName, worker.name.middleName,
			cwa.dateRange.startDate, cwa.dateRange.endDate, 
			caseWorkerCaseload.name, cwa.caseload.category)
		from 
			omis.caseload.domain.CaseWorkerAssignment cwa
			inner join cwa.caseload caseWorkerCaseload
			inner join caseWorkerCaseload.caseload caseloadCaseload
			inner join cwa.worker worker
		where
			caseloadCaseload = :caseload
			and			
			((cwa.dateRange.startDate <= :effectiveDate)
  				and (cwa.dateRange.endDate is null or cwa.dateRange.endDate > :effectiveDate))  
  			order by worker.name.lastName desc
	]]></query>
	<query name="findOffenderCaseAssignmentByCaseload"><![CDATA[
		select new omis.caseload.report.OffenderCaseAssignmentSummary(
			offenderCaseAssignment.id,
			offender.id, 
			offender.offenderNumber, 
			offender.name.firstName, 
			offender.name.lastName, 
			offender.name.middleName,
			contactCategory.name, 
			max(contact.contactDate),
			offenderCaseAssignment.dateRange.startDate, 
			offenderCaseAssignment.dateRange.endDate)
			
		from omis.caseload.domain.CaseloadContact contact
				inner join contact.category contactCategory
				right outer join contact.caseAssignment contactOffenderCaseAssignment,	
		omis.caseload.domain.OffenderCaseAssignment offenderCaseAssignment
				left outer join offenderCaseAssignment.caseload offenderCaseload
				inner join offenderCaseAssignment.offender offender
								
		where
				offenderCaseload = :caseload
				and 
  				(offenderCaseAssignment = contactOffenderCaseAssignment)			 													
			and
			 	((offenderCaseAssignment.dateRange.startDate <= :effectiveDate)
  				and 
  				(offenderCaseAssignment.dateRange.endDate is null 
  				or
  				offenderCaseAssignment.dateRange.endDate > :effectiveDate))
  			group by 
  				offenderCaseAssignment.id,  			
				offender.id, 
				offender.offenderNumber, 
				offender.name.firstName, 
				offender.name.lastName, 
				offender.name.middleName,
				contactCategory.name,			
				offenderCaseAssignment.dateRange.startDate, 
				offenderCaseAssignment.dateRange.endDate
			having (max(contact.contactDate) <= :effectiveDate 
				or (max(contact.contactDate) is null))
			order by offender.name.lastName, offender.name.firstName desc
	]]></query>
	<query name="countCaseloadContacts"><![CDATA[
	select
	case when count(*) > 0
	then
	true
	else
	false
	end
	from omis.caseload.domain.CaseloadContact contact
	where
	contact.caseAssignment = :offenderCaseAssignment
	]]></query>
	<query name="findCaseWorkSummaryByLastName"><![CDATA[
	select new omis.caseload.report.CaseworkSummary(
			cwa.caseload.id, cwa.id, worker.name.firstName, 
			worker.name.lastName, worker.name.middleName,
			cwa.dateRange.startDate, cwa.dateRange.endDate, 
			cwa.caseload.name, cwa.caseload.category) 
		from omis.caseload.domain.CaseWorkerAssignment cwa
			inner join cwa.worker worker
		where (upper(worker.name.lastName) like upper(:lastName || '%'))
			and
			((cwa.dateRange.startDate <= :effectiveDate)
  				and (cwa.dateRange.endDate is null or cwa.dateRange.endDate > :effectiveDate))
  			order by
  			  worker.name.lastName, worker.name.firstName desc
	]]></query>
	<query name="findCaseWorkSummaryByLastFirstName"><![CDATA[
	select new omis.caseload.report.CaseworkSummary(
			cwa.caseload.id, cwa.id, worker.name.firstName, 
			worker.name.lastName, worker.name.middleName,
			cwa.dateRange.startDate, cwa.dateRange.endDate, 
			cwa.caseload.name, cwa.caseload.category)
		from omis.caseload.domain.CaseWorkerAssignment cwa
			inner join cwa.worker worker
		where ((upper(worker.name.lastName) like upper(:lastName || '%'))
			and	(upper(worker.name.firstName) like upper(:firstName || '%')))		
			and
			((cwa.dateRange.startDate <= :effectiveDate)
  				and (cwa.dateRange.endDate is null or cwa.dateRange.endDate > :effectiveDate))
  			order by
  			  worker.name.lastName, worker.name.firstName desc
	]]></query>
	<query name="findCaseWorkSummaryByUserName"><![CDATA[
	select new omis.caseload.report.CaseworkSummary(
			cwa.caseload.id, cwa.id, worker.name.firstName, 
			worker.name.lastName, worker.name.middleName,
			cwa.dateRange.startDate, cwa.dateRange.endDate, 
			cwa.caseload.name, cwa.caseload.category)
		from omis.caseload.domain.CaseWorkerAssignment cwa
			inner join cwa.worker worker,
			omis.user.domain.UserAccount ua
		where (upper(ua.username) like upper(:username || '%'))
			and ((cwa.dateRange.startDate <= :effectiveDate)
  				and (cwa.dateRange.endDate is null or cwa.dateRange.endDate > :effectiveDate))
  			order by
  			 ua.username
	]]></query>
	<query name="findCaseWorkSummaryByCaseloadName"><![CDATA[
	select new omis.caseload.report.CaseworkSummary(
			cwa.caseload.id, cwa.id, worker.name.firstName, 
			worker.name.lastName, worker.name.middleName,
			cwa.dateRange.startDate, cwa.dateRange.endDate, 
			cwa.caseload.name, cwa.caseload.category)
		from omis.caseload.domain.CaseWorkerAssignment cwa
			inner join cwa.worker worker
		where 
			(upper(cwa.caseload.name) like upper(:caseloadName || '%'))
			and ((cwa.dateRange.startDate <= :effectiveDate)
  				and (cwa.dateRange.endDate is null or cwa.dateRange.endDate > :effectiveDate))
  			order by
  			worker.name.lastName, worker.name.firstName desc
	]]></query>
	<query name="findOffenderCaseAssignmentByCaseloadAndDateRange"><![CDATA[
	select new omis.caseload.report.OffenderCaseAssignmentSummary(
			offenderCaseAssignment.id,
			offender.id, 
			offender.offenderNumber, 
			offender.name.firstName, 
			offender.name.lastName, 
			offender.name.middleName,
			contactCategory.name, 
			max(contact.contactDate),
			offenderCaseAssignment.dateRange.startDate, 
			offenderCaseAssignment.dateRange.endDate)
			
		from omis.caseload.domain.CaseloadContact contact
				inner join contact.category contactCategory
				right outer join contact.caseAssignment contactOffenderCaseAssignment,	
		omis.caseload.domain.OffenderCaseAssignment offenderCaseAssignment
				left outer join offenderCaseAssignment.caseload offenderCaseload
				inner join offenderCaseAssignment.offender offender
								
		where
				(offenderCaseload = :caseload
				and 
  				offenderCaseAssignment = contactOffenderCaseAssignment)			 													
			and
				((offenderCaseAssignment.dateRange.startDate >= :startDate 
			and
				(offenderCaseAssignment.dateRange.startDate >= :endDate
				or 
				offenderCaseAssignment.dateRange.endDate is null))
		or
			((offenderCaseAssignment.dateRange.startDate <= :startDate) 
			and
				(:startDate < offenderCaseAssignment.dateRange.endDate and offenderCaseAssignment.dateRange.endDate > :endDate
				or
				offenderCaseAssignment.dateRange.endDate is null)))				 		
  			group by 
  				offenderCaseAssignment.id,  			
				offender.id, 
				offender.offenderNumber, 
				offender.name.firstName, 
				offender.name.lastName, 
				offender.name.middleName,
				contactCategory.name,			
				offenderCaseAssignment.dateRange.startDate, 
				offenderCaseAssignment.dateRange.endDate
			having ((max(contact.contactDate) <> null) 
				or (max(contact.contactDate) is null))
			order by offender.name.lastName, offender.name.firstName desc
	]]></query>
	<query name="findContactSummaryByOffender"><![CDATA[
	select new omis.caseload.report.ContactSummary(
		cc.id, case when contactCaseload = :caseload
					then true else false end as activeCaseload, 
					cc.contactDate, cc.contactBy.name.lastName, 
					cc.contactBy.name.firstName, cc.contactBy.name.middleName, 
					category.name)
		from omis.caseload.domain.CaseloadContact cc
			left outer join cc.category category
			right outer join cc.caseAssignment contactOffenderCaseAssignment
			left outer join contactOffenderCaseAssignment.caseload contactCaseload,
			omis.caseload.domain.OffenderCaseAssignment offenderCaseAssignment
				left outer join offenderCaseAssignment.caseload offenderCaseload
				inner join offenderCaseAssignment.offender offender
		where
			offender = :offender
			and offenderCaseload = :caseload 
		order by
			cc.contactDate desc
	]]></query>
</hibernate-mapping>