<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.caseload.domain">
	<class entity-name="omis.caseload.domain.CaseloadContact"
		proxy="omis.caseload.domain.CaseloadContact" 
		name="omis.caseload.domain.impl.CaseloadContactImpl"
		table="`CASELOAD_CONTACT`">
		<id name="id" column="`ID`" type="java.lang.Long">
			<generator class="sequence">
				<param name="sequence">`CASELOAD_CONTACT_SEQ`</param>
			</generator>
		</id>
		<many-to-one name="contactBy" column="`PERSON_ID`" not-null="true" entity-name="omis.person.domain.Person" unique="false"/>
		<property name="contactDate" column="`CONTACT_DATE`" not-null="true" />
		<many-to-one name="category" column="`CONTACT_CATEGORY_ID`" entity-name="omis.caseload.domain.ContactCategory" not-null="true" />
		<many-to-one name="caseAssignment" column="`OFFENDER_CASE_ASSIGNMENT_ID`" entity-name="omis.caseload.domain.OffenderCaseAssignment" not-null="true" />
		<property name="caseNote" column="`CASE_NOTE`" not-null="true" type="string"/>
		<component name="creationSignature">
			<many-to-one name="userAccount" column="`CREATE_ACCOUNT_ID`"
				not-null="true" />
			<property name="date" column="`CREATE_DATE`" not-null="true" />
		</component>
		<component name="updateSignature">
			<many-to-one name="userAccount" column="`UPDATE_ACCOUNT_ID`"
				not-null="true" />
			<property name="date" column="`UPDATE_DATE`" not-null="true" />
		</component>
	</class>
	<query name="findCaseloadContact"><![CDATA[
		select contact
		from
			omis.caseload.domain.CaseloadContact contact
		where
			contact.caseAssignment = :offenderCaseAssignment
			and
			contact.contactDate = :contactDate
			and 
			contact.contactBy = :contactBy
			and 
			contact.category = :category
	]]></query>
	<query name="findCaseloadContactExcluding"><![CDATA[
		select contact
		from
			omis.caseload.domain.CaseloadContact contact
		where
			contact.caseAssignment = :offenderCaseAssignment
			and
			contact.contactDate = :contactDate
			and 
			contact.contactBy = :contactBy
			and 
			contact.category = :category
			and 
			contact != :contact
	]]></query>
</hibernate-mapping>