<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 - Mapping and queries for user groups.
 -
 - Author: Stephen Abson
 -->
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.user.domain">
	<class entity-name="omis.user.domain.UserGroup"
	       proxy="omis.user.domain.UserGroup"
	       name="omis.user.domain.impl.UserGroupImpl"
	       table="`USER_GROUP`">
		<id name="id" column="`ID`">
			<generator class="sequence">
				<param name="sequence">`USER_GROUP_SEQ`</param>
			</generator>
		</id>
		<property name="name" column="`NAME`" not-null="true" unique="true"/>
		<property name="description" column="`DESCRIPTION`" not-null="true"/>
		<property name="sortOrder" column="`SORT_ORDER`" not-null="true"/>
		<property name="valid" column="`VALID`" type="yes_no" not-null="true"/>
	</class>
	<query name="findAllUserGroups"><![CDATA[
		select userGroup
		from omis.user.domain.UserGroup userGroup
		order by userGroup.sortOrder, userGroup.name
	]]></query>
	<query name="findMaxUserGroupSortOrder"><![CDATA[
		select coalesce(max(userGroup.sortOrder), 0)
		from omis.user.domain.UserGroup userGroup
	]]></query>
	<query name="findUserGroupsByAccount"><![CDATA[
	    select userGroup
	    from omis.user.domain.UserGroupMembership as userGroupMembership
	      inner join userGroupMembership.userAccount as userAccount
	      inner join userGroupMembership.userGroup as userGroup
	    where userAccount = :userAccount
	]]></query>
	<query name="findUserGroupsByUserRole"><![CDATA[
		select userGroup
		from omis.user.domain.UserRoleAssignment as userRoleAssignment
		  inner join userRoleAssignment.userGroup as userGroup
		  inner join userRoleAssignment.userRole as userRole
		where userRole = :userRole
	]]></query>
</hibernate-mapping>